import Header from '@/component/common/shared/Header';
import SearchField from '@/component/common/shared/SearchField';
import UserAuthLayout from '@/component/layouts/UserAuthLayout';
import { useFetchData } from '@/hooks/useApi';
import Head from 'next/head';
import Link from 'next/link';
import { FaHeart } from 'react-icons/fa';
import { ReactElement } from 'react';
import NotFound from '@/component/common/shared/NotFound';
import Loader from '@/component/common/shared/Loader';

type FrontCategory = {
	background: string;
	description: string;
	slug: string;
	threads: string[];
	title: string;
	_id: string;
	tags: string[];
};

const Categories = () => {
	const { data: categories, isLoading } = useFetchData(
		'/api/category/all?select=title,threads,_id,background,slug,description,tags',
		['front-categories'],
		1,
	);

	return (
		<>
			<Head>
				<title>Thread categories</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
			</Head>
			{isLoading ? (
				<Loader />
			) : categories.status === 'success' ? (
				categories.data.length > 0 ? (
					<section id="categories" className="bg-[#F8F9FA]">
						<div className="container mx-auto">
							<div className="flex sm:items-center sm:gap-0 gap-2 justify-between sm:flex-row flex-col py-6 border-b border-b-[#e1e7e9]">
								<h3 className="text-[#303344] text-lg font-medium">
									Categories
								</h3>
								<SearchField />
							</div>
							<div className="categories-wrapper grid lg:grid-cols-3 sm:grid-cols-2 grid-cols-1 md:gap-8 gap-6 py-14">
								{categories.data.map(
									(item: FrontCategory, index: number) => (
										<Link
											href={`/thread/categories/${item.slug}`}
											key={index}
											className="block"
										>
											<div className="single-categories bg-white p-8 rounded-[5px] flex flex-col h-full">
												<div className="flex items-center justify-between">
													<span
														className="text-white text-sm font-normal py-1 px-2 rounded-[4px]"
														style={{
															backgroundColor:
																item.background,
														}}
													>
														{item.title}
													</span>
													<span className="text-[#182730] text-sm font-medium">
														Threads -{' '}
														{item.threads
															? item.threads
																	.length
															: 0}
													</span>
												</div>
												<span className="text-[#666f74] text-base font-medium my-5 block">
													{item.description}
												</span>
												<div className="categories-tags">
													<h5 className="text-[#182730] text-sm font-bold mb-2">
														Similar TAGS
													</h5>
													<div className="tags flex items-center gap-2 flex-wrap mb-2">
														{item.tags.map(
															(item, index) => (
																<span
																	key={index}
																	className="bg-[#D7DADC] text-[#182730] text-sm font-normal py-1 px-[6px] rounded-[4px]"
																>
																	{item}
																</span>
															),
														)}
													</div>
												</div>
											</div>
										</Link>
									),
								)}
							</div>
						</div>
					</section>
				) : (
					<NotFound text={'not found'} />
				)
			) : (
				<NotFound text={'not found'} />
			)}
		</>
	);
};
Categories.getLayout = function getLayout(page: ReactElement) {
	return <UserAuthLayout>{page}</UserAuthLayout>;
};
export default Categories;
