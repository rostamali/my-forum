import AdminPageTitle from '@/component/common/admin/AdminPageTitle';
import ThreadCard from '@/component/common/shared/ThreadCard';
import UserCard from '@/component/common/admin/UserCard';
import AdminAuthLayout from '@/component/layouts/AdminAuthLayout';
import { useFetchData } from '@/hooks/useApi';
import { Tabs, TabsRef } from 'flowbite-react';
import Head from 'next/head';
import { ReactElement, useRef, useState } from 'react';
import { BiPlus } from 'react-icons/bi';
import UserForm from '@/component/common/admin/UserForm';
import Spinner from '@/component/common/shared/Spinner';

const Users = () => {
	const [show, setShow] = useState(false);
	const [activeTab, setActiveTab] = useState<number>(0);
	const tabsRef = useRef<TabsRef>(null);

	const { data: users, isLoading } = useFetchData(
		'/api/dashboard/users',
		['admin-users'],
		1,
	);

	return (
		<>
			<Head>
				<title>All Users</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
			</Head>
			{isLoading ? (
				<Spinner />
			) : (
				<section id="users">
					<div className="mb-6">
						<AdminPageTitle
							title={'Users'}
							subtitle={'Admin / Users'}
						/>
					</div>
					{users.status === 'success' ? (
						<>
							<div className="users-list-header flex items-center justify-between">
								<div className="users-tab-btn flex items-center gap-3">
									{[
										'All Users',
										'Admins',
										'Moderator',
										'Banned / Deleted',
									].map((item, index) => (
										<button
											className={`text-base font-medium duration-200 h-[42px] px-5 rounded ${
												activeTab === index
													? 'bg-[#2171cd] text-white'
													: 'bg-white text-[#182730]'
											}`}
											onClick={() =>
												tabsRef.current?.setActiveTab(
													index,
												)
											}
											key={index}
										>
											{item}
										</button>
									))}
								</div>
								<button
									className="bg-[#2171cd] h-12 w-12 flex items-center justify-center rounded-full group"
									onClick={() => setShow(!show)}
								>
									<BiPlus className="text-3xl text-white duration-300 group-hover:rotate-[360deg]" />
								</button>
							</div>
							<div className="users-list mt-6">
								<Tabs.Group
									aria-label="User list"
									style="default"
									ref={tabsRef}
									onActiveTabChange={(tab) =>
										setActiveTab(tab)
									}
								>
									<Tabs.Item active title="Users">
										{users.data?.users.length > 0 ? (
											<UserCard
												users={users.data?.users}
											/>
										) : (
											<h2 className="text-xl font-medium capitalize pt-10">
												No Admins Found...
											</h2>
										)}
									</Tabs.Item>
									<Tabs.Item title="Admins">
										{users.data?.admins.length > 0 ? (
											<UserCard
												users={users.data?.admins}
											/>
										) : (
											<h2 className="text-xl font-medium capitalize pt-10">
												No Admins Found...
											</h2>
										)}
									</Tabs.Item>
									<Tabs.Item title="Moderator">
										{users.data?.moderator.length > 0 ? (
											<UserCard
												users={users.data?.moderator}
											/>
										) : (
											<h2 className="text-xl font-medium capitalize pt-10">
												No moderator User Found...
											</h2>
										)}
									</Tabs.Item>
									<Tabs.Item title="Contacts">
										{users.data?.deleted.length > 0 ? (
											<UserCard
												users={users.data?.deleted}
											/>
										) : (
											<h2 className="text-xl font-medium capitalize pt-10">
												No Banned / Deleted User
												Found...
											</h2>
										)}
									</Tabs.Item>
								</Tabs.Group>
							</div>
						</>
					) : (
						<h2 className="text-xl">No user found...</h2>
					)}
				</section>
			)}
			<UserForm show={show} setShow={setShow} />
		</>
	);
};
Users.getLayout = function getLayout(page: ReactElement) {
	return <AdminAuthLayout>{page}</AdminAuthLayout>;
};
export default Users;
