import UserCard from '@/component/common/admin/UserCard';
import AdminAuthLayout from '@/component/layouts/AdminAuthLayout';
import { ReactElement, useState } from 'react';
import { BsSearch } from 'react-icons/bs';
import Head from 'next/head';
import AdminPageTitle from '@/component/common/admin/AdminPageTitle';
import { useDeleteData, useFetchData } from '@/hooks/useApi';
import Link from 'next/link';
import CustomPagination from '@/component/common/shared/CustomPagination';
import { BiTrash } from 'react-icons/bi';
import { handleDeleteConfirm } from '@/utils/confirmation';

const Replies = () => {
	const [page, setPage] = useState(1);
	const { data: replies, isLoading } = useFetchData(
		`/api/dashboard/replies?page=${page}&limit=5`,
		['admin-replies'],
		page,
	);
	const { mutate: deleteComment } = useDeleteData('admin-replies');
	const handleDeleteComment = (id: string) => {
		handleDeleteConfirm('Want to delete?', 'Comment will be removed').then(
			(result) => {
				if (result.isConfirmed) {
					deleteComment(`/api/comment/deleteByAdmin/${id}`);
				}
			},
		);
	};

	return (
		<>
			<Head>
				<title>Thread replies</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
			</Head>
			{isLoading ? (
				<h2>Loading.........</h2>
			) : (
				<section id="replies">
					<AdminPageTitle
						title={'Replies'}
						subtitle={'Admin / Replies'}
					/>
					{replies.status === 'success' ? (
						replies.data.length > 0 ? (
							<>
								<div className="replies-list mt-6">
									<div className="user-card-wrapper">
										<div className="user-items-header grid grid-cols-9 px-6 py-5 bg-white">
											<h5 className="col-span-6 text-[#303344] font-medium text-base">
												Topic
											</h5>
											<h5 className="text-[#303344] font-medium text-base text-center">
												Category
											</h5>
											<h5 className="text-[#303344] font-medium text-base text-center">
												Last Activity
											</h5>
											<h5 className="text-[#303344] font-medium text-base text-center">
												Action
											</h5>
										</div>
										{replies.data.map(
											(
												item: {
													lastActivity: Date;
													text: string;
													thread: {
														_id: string;
														title: string;
														category: {
															_id: string;
															title: string;
															background: string;
														};
													};
													user: {
														_id: string;
														userName: string;
													};
													_id: string;
												},
												index: number,
											) => (
												<div
													className="user-item"
													key={index}
												>
													<div className="thread-card grid grid-cols-9 gap-4 bg-[#f1f3f5] py-5 px-6 border-b border-b-[#e1e7e9]">
														<div className="user flex items-center col-span-6 gap-4">
															<Link
																href="/"
																className="bg-[#564256] h-[45px] min-w-[45px] w-[45px] flex items-center justify-center text-xl font-normal text-white rounded-full"
															>
																D
															</Link>
															<div className="">
																<h3 className="text-base text-[#303344] font-medium">
																	{
																		item
																			.thread
																			.title
																	}
																	...
																</h3>
																<p
																	dangerouslySetInnerHTML={{
																		__html: item.text
																			? item.text
																					.replace(
																						/<p>(\s|&nbsp;)*<\/p>/g,
																						'&nbsp;',
																					)
																					.substring(
																						0,
																						220,
																					)
																			: '',
																	}}
																></p>
															</div>
														</div>
														<div className="flex items-center justify-center">
															<span
																className="text-white text-sm font-normal rounded-[4px] py-1 px-2 capitalize"
																style={{
																	backgroundColor:
																		item
																			.thread
																			.category
																			.background,
																}}
															>
																{
																	item.thread
																		.category
																		.title
																}
															</span>
														</div>
														<h5 className="flex items-center justify-center text-base text-[#666f74] font-normal">
															{new Date(
																item.lastActivity,
															).toLocaleString(
																'en-US',
																{
																	timeZone:
																		'UTC',
																	year: '2-digit',
																	month: 'short',
																	day: 'numeric',
																},
															)}
														</h5>
														<h5 className="flex items-center justify-center text-base text-[#666f74] font-normal">
															<button
																className="bg-[#c53030] h-[30px] w-[30px] flex items-center justify-center rounded-md"
																onClick={() =>
																	handleDeleteComment(
																		item._id,
																	)
																}
															>
																<BiTrash className="text-white text-lg" />
															</button>
														</h5>
													</div>
												</div>
											),
										)}
									</div>
								</div>
								<div className="mt-6">
									<CustomPagination
										currentpage={replies.currentPage}
										totalPage={replies.pages}
										handler={setPage}
									/>
								</div>
							</>
						) : (
							<h2>Empty</h2>
						)
					) : (
						<h2>Empty</h2>
					)}
				</section>
			)}
		</>
	);
};
Replies.getLayout = function getLayout(page: ReactElement) {
	return <AdminAuthLayout>{page}</AdminAuthLayout>;
};
export default Replies;
