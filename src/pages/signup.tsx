import AuthInput from '@/component/common/auth/AuthInput';
import ButtonLoader from '@/component/common/shared/ButtonLoader';
import Picture from '@/component/common/shared/Picture';
import { useCreateData } from '@/hooks/useApi';
import { signupValidation } from '@/utils/validators';
import { yupResolver } from '@hookform/resolvers/yup';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import { useForm } from 'react-hook-form';
import { ToastContainer, toast } from 'react-toastify';

const SignUp = () => {
	const {
		register,
		handleSubmit,
		formState: { errors },
		reset,
	} = useForm({
		resolver: yupResolver(signupValidation),
		mode: 'onChange',
	});

	const router = useRouter();
	const { mutate: signup, isLoading } = useCreateData(
		'/api/auth/signup',
		'user',
	);
	const onSubmit = handleSubmit((user) => {
		signup(user, {
			onSuccess: (res) => {
				setTimeout(() => {
					if (router.asPath === '/login') {
						router.push('/');
					} else {
						router.reload();
					}
					reset();
				}, 1400);
			},
			onError: (err: any) => {
				toast.error(err.response.data.message);
			},
		});
	});

	return (
		<>
			<Head>
				<title>Create your account</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
			</Head>
			<section
				id="signup"
				className="bg-[#F8F9FA] h-screen flex items-center"
			>
				<div className="container mx-auto">
					<div className="signup-form-wrapper bg-white sm:w-[420px] w-[100%] mx-auto sm:p-10 p-6">
						<Link href="/">
							<Picture
								link={'/assets/logo.png'}
								classList={'h-[55px] w-[50px]'}
								alt={'logo'}
							/>
						</Link>
						<h4 className="text-[#303344] text-lg font-semibold mt-5">
							Welcome to MyForum
						</h4>
						<p className="text-[#666f74] text-base font-normal mt-2">
							Join the forum to unlock true power of community.
						</p>
						<span className="border-b border-b-[#E2E7EA] w-[100px] block my-5"></span>
						<form onSubmit={onSubmit}>
							<AuthInput
								register={register}
								template={signupTemplate}
								errors={errors}
							/>
							<button
								className="bg-[#2172CD] text-white block w-full rounded-sm h-[45px] text-base"
								disabled={isLoading}
							>
								{isLoading ? (
									<ButtonLoader />
								) : (
									'Create my account'
								)}
							</button>
						</form>
						<div className="auth-form-footer pt-6">
							<p className="text-[#666f74] text-base font-normal ">
								Already have an account?
								<Link
									href="/login"
									className="text-[#2172CD] ml-1"
								>
									Login here
								</Link>
							</p>
							<span className="border-b border-b-[#E2E7EA] w-[80px] block my-5"></span>
							<span className="text-[#666f74] text-sm font-normal">
								By signing up, signing in or continuing. I agree
								to MyForum&apos;s{' '}
								<Link
									href="/terms-of-service"
									className="text-[#2172CD]"
								>
									Terms of use
								</Link>{' '}
								and{' '}
								<Link
									href="/privacy"
									className="text-[#2172CD]"
								>
									Privacy Policy
								</Link>
							</span>
						</div>
					</div>
				</div>
			</section>
			<ToastContainer
				position="bottom-center"
				autoClose={5000}
				hideProgressBar={false}
				newestOnTop={false}
				closeOnClick
				rtl={false}
				pauseOnFocusLoss
				draggable
				pauseOnHover
				theme="colored"
			/>
		</>
	);
};
const signupTemplate = [
	{
		title: 'Username',
		name: 'userName',
		type: 'text',
	},
	{
		title: 'Email',
		name: 'email',
		type: 'email',
	},
	{
		title: 'Password',
		name: 'password',
		type: 'password',
	},
];

export default SignUp;
